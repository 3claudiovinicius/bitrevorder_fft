void bitrevorder(int N, float x[]){
	int N,n,k,r=0;
	for(n=0;n<=(N-2);n++){
		if(n<r){
			temp=x[n+1];
			x[n+1]=x[r+1];
			x[r+1]=temp;}
		k=N/2;
		while(k<=r){
			r=r-k;
			k=k/2;}
		r=r+k;}
}

void four1(float data[], unsigned long nn, int isign){
	unsigned long	n,mmax,m,j,istep,i;
	double			wtemp,wr,wpr,wpi,wi,theta;
	float			tempr,tempi;
	
	n=nn<<1;
	j=1;
	for(i=1;i<n;i=i+2){
		if(j>i){
			SWAP(data[j],data[i]);
			SWAP(data[j+1],data[i+1]);}
		m=n>>1;
		while(m>=2&&j>m){
			j=j-m;
			m=m>>1;}
		j=j+m;
	}
	
	mmax=2;
	while(n>mmax){
		istep=mmax<<1;
		theta=isign*2*PI/mmax;
		wtemp=sin(0.5*theta);
		wpr=-2*wtemp*wtemp;
		wpi=sin(theta);
		wr=1.0;
		wi=0.0;
		for(m=1;m<mmax;m=m+2){
			for(i=m;i<=n;i=i+istep){
				j=i+mmax;
				tempr=wr*data[j]-wi*data[j+1];
				tempi=wr*data[j+1]+wi*data[j];
				data[j]=data[i]-tempr;
				data[j+1]=data[i+1]-tempi;
				data[i]=data[i]+tempr;
				data[i+1]=data[i+1]+tempi;
			}
			wr=(wtemp=wr)*wpr-wi*wpi+wr;
			wi=wi*wpr+wtemp*wpi+wi;
		}
		mmax=istep;
	}
}